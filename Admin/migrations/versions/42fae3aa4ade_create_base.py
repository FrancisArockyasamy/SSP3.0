"""create-base

Revision ID: 42fae3aa4ade
Revises: 
Create Date: 2024-05-17 10:46:44.542526

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42fae3aa4ade'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('module_features',
    sa.Column('module_feature_id', sa.Integer(), nullable=False),
    sa.Column('module_name', sa.String(), nullable=True),
    sa.Column('feature_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('module_feature_id')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_index(op.f('ix_roles_role_name'), 'roles', ['role_name'], unique=True)
    op.create_table('schools',
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('school_name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('school_id')
    )
    op.create_index(op.f('ix_schools_school_name'), 'schools', ['school_name'], unique=True)
    op.create_table('academic_years',
    sa.Column('year_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('year_name', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('year_id')
    )
    op.create_table('calendar_events',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('event_name', sa.String(), nullable=True),
    sa.Column('event_date', sa.Date(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('role_permissions',
    sa.Column('role_permission_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('module_feature_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_feature_id'], ['module_features.module_feature_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('role_permission_id')
    )
    op.create_table('school_settings',
    sa.Column('setting_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('academic_schedule', sa.String(), nullable=True),
    sa.Column('grading_system', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('default_values',
    sa.Column('default_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('module_name', sa.String(), nullable=True),
    sa.Column('default_setting', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('default_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('default_values')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('school_settings')
    op.drop_table('role_permissions')
    op.drop_table('calendar_events')
    op.drop_table('academic_years')
    op.drop_index(op.f('ix_schools_school_name'), table_name='schools')
    op.drop_table('schools')
    op.drop_index(op.f('ix_roles_role_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('module_features')
    # ### end Alembic commands ###
